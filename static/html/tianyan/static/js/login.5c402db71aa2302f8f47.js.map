{"version":3,"sources":["webpack:///static/js/login.5c402db71aa2302f8f47.js","webpack:///./src/util/request.js?0ff7****","webpack:///./src/apis.js?393b****","webpack:///./src/util/typeCheck.js?2e50****","webpack:///./src/loader/loader.js?2c6a****","webpack:///./src/apps/login/mock/index.js","webpack:///./src/apps/login/scripts/login.js","webpack:///./src/apps/login/index.js","webpack:///./src/apps/login/mock/login.js","webpack:///./src/loader/base.config.js?f70b****","webpack:///./src/util/util.js?cade****","webpack:///./src/util/zoom/zoom.js?db02****","webpack:///./src/util/errorTips/errorDialog.hbs?2173****","webpack:///./src/config.js?4264****"],"names":["webpackJsonp","13","module","__webpack_exports__","__webpack_require__","fetch","apiName","data","arguments","length","undefined","callback","i","__WEBPACK_IMPORTED_MODULE_5__typeCheck__","ajaxConfig","__WEBPACK_IMPORTED_MODULE_6__apis__","config","extraAjaxConfig","ajaxData","filterData","contentType","indexOf","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default","processData","formData","FormData","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_keys___default","forEach","key","val","append","__WEBPACK_IMPORTED_MODULE_3_jquery___default","a","ajax","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default","url","dataType","done","response","code","__WEBPACK_IMPORTED_MODULE_4__util__","errorTooltip","msg","result","fail","fetchInterval","cb","interval","argumentsLength","defaultInterval","__WEBPACK_IMPORTED_MODULE_7__config__","get","hasClosed","delayFetchInterval","always","close","fetchSocket","ws","__WEBPACK_IMPORTED_MODULE_8_reconnecting_websocket___default","onmessage","onclose","this","window","addEventListener","removeEventListener","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__","n","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_keys__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify__","__WEBPACK_IMPORTED_MODULE_3_jquery__","__WEBPACK_IMPORTED_MODULE_8_reconnecting_websocket__","23","global","normalizeHost","host","isWebsocket","hosts","location","normalProtocol","protocol","__WEBPACK_IMPORTED_MODULE_1_mockjs__","__WEBPACK_IMPORTED_MODULE_1_mockjs___default","__WEBPACK_IMPORTED_MODULE_2__config__","__WEBPACK_IMPORTED_MODULE_3__util_typeCheck__","apiMap","paramReg","merge","apiConfigMap","me","websocketHost","mock","Object","prototype","hasOwnProperty","call","apiConfig","type","toLowerCase","reg","rawUrl","replace","str","paramName","encodeURIComponent","regStr","RegExp","resData","execRes","exec","24","is","expectType","toString","isObject","isFunction","isNumber","isArray","26","__WEBPACK_IMPORTED_MODULE_0_reset_css__","__WEBPACK_IMPORTED_MODULE_1__common_common_css__","__WEBPACK_IMPORTED_MODULE_2__util_zoom_zoom__","__WEBPACK_IMPORTED_MODULE_3__config__","__WEBPACK_IMPORTED_MODULE_4__apis__","__WEBPACK_IMPORTED_MODULE_5__base_config__","load","app","apis","initZoom","init","279","__WEBPACK_IMPORTED_MODULE_0__login__","fetchLogin","280","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default","__WEBPACK_IMPORTED_MODULE_2_jquery__","__WEBPACK_IMPORTED_MODULE_2_jquery___default","Login","value","bindEvent","on","href","292","exports","328","defineProperty","__WEBPACK_IMPORTED_MODULE_0__index_css__","__WEBPACK_IMPORTED_MODULE_1__loader_loader__","__WEBPACK_IMPORTED_MODULE_2__mock__","__WEBPACK_IMPORTED_MODULE_3__scripts_login_js__","login","329","userId|1-10000","33","search","mockInterval","proxy","proxyHost","websocketProxyHost","zoom","pageWidth","pageHeight","34","delay","func","delayMillis","immediate","setTimeout","d","__WEBPACK_IMPORTED_MODULE_0_jquery__","__WEBPACK_IMPORTED_MODULE_0_jquery___default","errorTpl","html","fadeIn","evt","stopPropagation","preventDefault","fadeOut","empty","35","x","innerWidth","__WEBPACK_IMPORTED_MODULE_1__config__","y","innerHeight","lastScale","body","css","adaptZoom","addClass","__WEBPACK_IMPORTED_MODULE_0__zoom_css__","38","39","40","Handlebars","template","compiler","main","container","depth0","helpers","partials","helper","escapeExpression","helperMissing","nullContext","name","hash","useData","7","srcConfig"],"mappings":"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","file":"static/js/login.5c402db71aa2302f8f47.js","sourcesContent":["webpackJsonp([6],{\n\n/***/ 13:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = fetch;\n/* unused harmony export fetchInterval */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = fetchSocket;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_keys__ = __webpack_require__(66);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_keys___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_keys__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify__ = __webpack_require__(65);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_jquery__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_jquery__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util__ = __webpack_require__(34);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__typeCheck__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__apis__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__config__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_reconnecting_websocket__ = __webpack_require__(76);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_reconnecting_websocket___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_reconnecting_websocket__);\n\n\n\n/**\r\n * @Author:      baizn\r\n * @DateTime:    2017-03-20 13:36:18\r\n * @Description: Description\r\n * @Last Modified By:   孙雨珩\r\n * @Last Modified Time:    2017-09-26 10:49:47\r\n */\n\n\n\n\n\n\n\n\n/**\r\n * 普通AJAX请求\r\n *  如果向后端传递的数据需要是json，那么接口.config.contentType应为'application/json; charset=UTF-8'\r\n *  如果向后端传递的数据需要传递文件，那么接口.config.contentType应为'multipart/form-data; charset=UTF-8'\r\n * \r\n * @export 对外暴露方法\r\n * @param {string} apiName 接口名称\r\n * @param {object} [data={}] 接口参数 可选\r\n * @param {function} callback 回调函数\r\n * @returns {Boolean} false\r\n */\nfunction fetch(apiName) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments[2];\n\n  if (arguments.length === 2 && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__typeCheck__[\"b\" /* isFunction */])(data)) {\n    // 只传了apiName和callback\n    callback = data;\n    data = {};\n  }\n  var ajaxConfig = __WEBPACK_IMPORTED_MODULE_6__apis__[\"a\" /* default */].config(apiName);\n  var extraAjaxConfig = {};\n  var ajaxData = __WEBPACK_IMPORTED_MODULE_6__apis__[\"a\" /* default */].filterData(apiName, data);\n  if (ajaxConfig.contentType) {\n    var contentType = ajaxConfig.contentType;\n    if (contentType.indexOf('application/json') != -1) {\n      // application/json的要自己将传递的数据转换成字符串\n      ajaxData = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(ajaxData);\n    } else if (contentType.indexOf('multipart/form-data') != -1) {\n      // 有文件要上传，使用formData\n      // 把contentType置为false，由xhr自己生成，避免使用者忘记设置boundary\n      extraAjaxConfig.contentType = false;\n      // xhr可直接发送formData，不用jquery重复处理数据\n      extraAjaxConfig.processData = false;\n      var formData = new FormData();\n      __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_keys___default()(ajaxData).forEach(function (key) {\n        var val = ajaxData[key];\n        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__typeCheck__[\"c\" /* isArray */])(val)) {\n          val.forEach(function (val) {\n            formData.append(key, val);\n          });\n        } else {\n          formData.append(key, val);\n        }\n      });\n      extraAjaxConfig.data = formData;\n    }\n  }\n  return __WEBPACK_IMPORTED_MODULE_3_jquery___default.a.ajax(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({\n    url: __WEBPACK_IMPORTED_MODULE_6__apis__[\"a\" /* default */].url(apiName, data),\n    dataType: 'json',\n    data: ajaxData\n  }, ajaxConfig, extraAjaxConfig)).done(function (response) {\n    if (!response.code) {\n      return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__util__[\"a\" /* errorTooltip */])('\\u8C03\\u540E\\u53F0\\u63A5\\u53E3\\u5931\\u8D25:' + response.msg);\n    }\n    callback && callback(response.result);\n  }).fail(function () {\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__util__[\"a\" /* errorTooltip */])('请求失败: 系统错误');\n  });\n}\n\n/**\r\n *  向指定api循环发送发送请求\r\n *  @param    {string}   apiName api名称\r\n *  @param    {object=}   data    请求参数（可选）\r\n *  @param    {Function}    cb    处理响应数据的回调\r\n *  @param    {number=}    interval    轮询间隔（毫秒）（可选，默认为配置值）\r\n *  @return   {Object}   用于对轮询状态进行操作的实例\r\n */\nfunction fetchInterval(apiName, data, cb, interval) {\n  var argumentsLength = arguments.length;\n  var defaultInterval = __WEBPACK_IMPORTED_MODULE_7__config__[\"a\" /* default */].get('fetchInterval');\n  if (argumentsLength === 2) {\n    // 只传了2个参数\n    // 没传data，没传interval\n    cb = data;\n    data = null;\n    interval = null;\n  } else if (argumentsLength === 3) {\n    // 只传了3个参数\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__typeCheck__[\"b\" /* isFunction */])(cb)) {\n      // 没有传interval\n      interval = null;\n    } else if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__typeCheck__[\"d\" /* isNumber */])(cb)) {\n      // 没有传data\n      interval = cb;\n      cb = data;\n      data = null;\n    }\n  }\n\n  data = data || {};\n  interval = interval || defaultInterval;\n\n  var hasClosed = false;\n  var delayFetchInterval = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__util__[\"b\" /* delay */])(function () {\n    if (hasClosed) {\n      return;\n    }\n    fetch(apiName, data, cb).always(delayFetchInterval);\n  }, interval);\n  delayFetchInterval(true);\n  return {\n    // 停止轮询\n    close: function close() {\n      hasClosed = true;\n    }\n  };\n}\n\n/**\r\n *  建立websocket链接\r\n *  @param    {string}   apiName api名称\r\n *  @param    {Object=}   data    请求参数（可选）\r\n *  @param    {Function} cb      处理推送数据的回调\r\n *  @return   {Websocket}   websocket实例\r\n */\nfunction fetchSocket(apiName, data, cb) {\n  if (arguments.length === 2 && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__typeCheck__[\"b\" /* isFunction */])(data)) {\n    // 只传了2个参数，并且第2个参数是函数，说明第二个参数是cb\n    cb = data;\n    data = {};\n  }\n  if (__WEBPACK_IMPORTED_MODULE_7__config__[\"a\" /* default */].get('mock')) {\n    // 需要mock，那么使用fetchInterval模拟\n    var fakeWs = fetchInterval(apiName, data, cb);\n    return fakeWs;\n  }\n  // 不需要mock，创建真实的websocket\n  var ws = new __WEBPACK_IMPORTED_MODULE_8_reconnecting_websocket___default.a(__WEBPACK_IMPORTED_MODULE_6__apis__[\"a\" /* default */].url(apiName, data), []);\n  ws.onmessage = cb;\n  ws.onclose = function () {\n    this.close();\n  };\n  // 当页面被卸载时，需要断开websocket\n  window.addEventListener('unload', function close() {\n    window.removeEventListener('unload', close);\n    ws.close();\n  });\n  return ws;\n}\n\n/***/ }),\n\n/***/ 23:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_mockjs__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_mockjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_mockjs__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__config__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_typeCheck__ = __webpack_require__(24);\n\n/**\r\n * @Author:      孙雨珩\r\n * @DateTime:    2017-07-18 09:26:24\r\n * @Description: 全局接口配置\r\n * @Last Modified By:   孙雨珩\r\n * @Last Modified Time:    2017-09-26 10:49:26\r\n */\n\n\n\n\nvar apiMap = {};\n\n/**\r\n *  当host没有域名时，根据页面的域名补充host\r\n *  @param    {string}  host        地址\r\n *  @param    {Boolean=} isWebsocket 是否是websocket（可选）\r\n *  @return   {string}  补充后的host\r\n */\nfunction normalizeHost(host, isWebsocket) {\n  var hosts = host;\n  if (hosts && hosts.indexOf('//') !== -1) {\n    // 有协议，那么就认为有域名，不进行处理\n    return hosts;\n  }\n  if (hosts === null) {\n    hosts = '';\n  }\n  hosts = location.host + hosts;\n  var normalProtocol = location.protocol;\n  if (isWebsocket) {\n    // 是websocket，根据页面协议猜测对应的ws协议\n    var protocol = 'ws://';\n    if (normalProtocol === 'https:') {\n      // https协议对应wss协议\n      protocol = 'wss://';\n    }\n    hosts = protocol + hosts;\n  } else {\n    hosts = normalProtocol + '//' + hosts;\n  }\n  return hosts;\n}\n\n// 第一个字符不能是数字从而防止匹配到port\nvar paramReg = /:([^/\\d][^/]+)/g;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  /**\r\n   *  加载接口配置\r\n   *  @param    {Object}  apiConfigMap 接口配置\r\n   */\n  merge: function merge(apiConfigMap) {\n    var me = this;\n    var host = void 0;\n    var websocketHost = void 0;\n    var mock = __WEBPACK_IMPORTED_MODULE_2__config__[\"a\" /* default */].get('mock');\n    if (__WEBPACK_IMPORTED_MODULE_2__config__[\"a\" /* default */].get('proxy')) {\n      // 为true，启用代理\n      host = __WEBPACK_IMPORTED_MODULE_2__config__[\"a\" /* default */].get('proxyHost');\n      websocketHost = __WEBPACK_IMPORTED_MODULE_2__config__[\"a\" /* default */].get('websocketProxyHost');\n    } else {\n      // 为false，不用代理\n      host = normalizeHost(__WEBPACK_IMPORTED_MODULE_2__config__[\"a\" /* default */].get('host'));\n      websocketHost = normalizeHost(__WEBPACK_IMPORTED_MODULE_2__config__[\"a\" /* default */].get('websocketHost'), true);\n    }\n    for (var key in apiConfigMap) {\n      if (!Object.prototype.hasOwnProperty.call(apiConfigMap, key) || !{}.hasOwnProperty.call(apiConfigMap, key)) {\n        continue;\n      }\n      // 默认不是websocket接口\n      var isWebsocket = false;\n      var apiConfig = apiConfigMap[key];\n      var ajaxConfig = apiConfig.config || {};\n      var url = apiConfig.url;\n      if (apiConfig.isWebsocket === true) {\n        // 接口声明是websocket接口\n        isWebsocket = true;\n      }\n      if (!ajaxConfig.type) {\n        // 默认method为get\n        ajaxConfig.type = 'get';\n      }\n      ajaxConfig.type = ajaxConfig.type.toLowerCase();\n      apiMap[key] = {\n        // 如果是websocket接口，则需要用websocketHost\n        // 否则用host\n        url: (isWebsocket ? websocketHost : host) + url,\n        config: ajaxConfig\n      };\n      if (mock && apiConfig.mock) {\n        // 需要mock，并且api存在mock配置\n        __WEBPACK_IMPORTED_MODULE_1_mockjs___default.a.mock(me.reg(key), ajaxConfig.type, apiConfig.mock);\n      }\n    }\n  },\n\n  /**\r\n   *  根据接口的名称，获取未绑定数据的url\r\n   *  @param    {string}  key 接口的名称\r\n   *  @return   {string}  接口的url\r\n   */\n  rawUrl: function rawUrl(key) {\n    return apiMap[key].url;\n  },\n\n  /**\r\n   *  根据接口的名称，获取绑定数据后的url\r\n   *  @param    {string}  key 接口的名称\r\n   *  @param    {Object=}  data 如果接口url上定义的变量名存在于data中，就会进行转换（可选）\r\n   *  @return   {string}  接口转换后的url\r\n   */\n  url: function url(key) {\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var me = this;\n    var url = me.rawUrl(key);\n\n    return url.replace(paramReg, function (str, paramName) {\n      var val = data[paramName];\n      if (val === undefined) {\n        val = 'null';\n      }\n      return global.encodeURIComponent(val);\n    });\n  },\n\n  /**\r\n   *  根据接口的名称，获取用来描述接口的url的正则表达式\r\n   *  @param    {string}  key 接口的名称\r\n   *  @return   {RegExp}  描述url的正则表达式\r\n   */\n  reg: function reg(key) {\n    var me = this;\n    var rawUrl = me.rawUrl(key);\n    var regStr = rawUrl.replace(/\\./g, '\\\\.').replace(paramReg, '[^/]+');\n    return new RegExp('^' + regStr + '(\\\\?.*)?$');\n  },\n\n  /**\r\n   *  根据接口的名称，获取接口的ajax配置\r\n   *  @param    {string}  key 接口名称\r\n   *  @return   {Object}  ajax配置\r\n   */\n  config: function config(key) {\n    return apiMap[key] && apiMap[key].config;\n  },\n\n  /**\r\n   *  根据接口的名称，过滤数据中能绑定到url的数据\r\n   *  @param    {string}  key  接口的名称\r\n   *  @param    {Object}  data 数据\r\n   *  @return   {Object}  无法绑定到url的剩余数据\r\n   */\n  filterData: function filterData(key, data) {\n    var me = this;\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__util_typeCheck__[\"a\" /* isObject */])(data)) {\n      return data;\n    }\n    var resData = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, data);\n    var rawUrl = me.rawUrl(key);\n    var execRes = void 0;\n    while (execRes = paramReg.exec(rawUrl)) {\n      var paramName = execRes[1];\n      delete resData[paramName];\n    }\n    return resData;\n  }\n});\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(27)))\n\n/***/ }),\n\n/***/ 24:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export is */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = isObject;\n/* unused harmony export isString */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = isFunction;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = isNumber;\n/* unused harmony export isBoolean */\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = isArray;\n/**\r\n * @Author:      孙雨珩\r\n * @DateTime:    2017-07-31 16:09:06\r\n * @Description: 类型检查\r\n * @Last Modified By:   孙雨珩\r\n * @Last Modified Time:    2017-09-26 10:33:15\r\n */\n\n/**\r\n *  检查值是否和要求的类型匹配\r\n *  @param    {*}  val        等待检查的值\r\n *  @param    {string}  expectType 期望类型\r\n *  @return   {boolean} 为true说明类型检查通过，为false说明类型检查不通过\r\n */\nfunction is(val, expectType) {\n  return Object.prototype.toString.call(val) === '[object ' + expectType + ']';\n}\n\n/**\r\n *  检查是否是Object类型\r\n *  @param    {*}  val 等待检查的类型\r\n *  @return   {boolean} 为true说明值是Object类型，为false说明值不是Object类型\r\n */\nfunction isObject(val) {\n  return is(val, 'Object');\n}\n\n/**\r\n *  检查是否是String类型\r\n *  @param    {*}  val 等待检查的类型\r\n *  @return   {boolean} 为true说明值是String类型，为false说明值不是String类型\r\n */\nfunction isString(val) {\n  return is(val, 'String');\n}\n\n/**\r\n *  检查是否是Function类型\r\n *  @param    {*}  val 等待检查的类型\r\n *  @return   {boolean} 为true说明值是Function类型，为false说明值不是Function类型\r\n */\nfunction isFunction(val) {\n  return is(val, 'Function');\n}\n\n/**\r\n *  检查是否是Number类型\r\n *  @param    {*}  val 等待检查的类型\r\n *  @return   {boolean} 为true说明值是Number类型，为false说明值不是Number类型\r\n */\nfunction isNumber(val) {\n  return is(val, 'Number');\n}\n\n/**\r\n *  检查是否是Boolean类型\r\n *  @param    {*}  val 等待检查的类型\r\n *  @return   {boolean} 为true说明值是Boolean类型，为false说明值不是Boolean类型\r\n */\nfunction isBoolean(val) {\n  return is(val, 'Boolean');\n}\n\n/**\r\n *  检查是否是Array类型\r\n *  @param    {*}  val 等待检查的类型\r\n *  @return   {boolean} 为true说明值是Array类型，为false说明值不是Array类型\r\n */\nfunction isArray(val) {\n  return is(val, 'Array');\n}\n\n/***/ }),\n\n/***/ 26:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_reset_css__ = __webpack_require__(75);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_reset_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_reset_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_common_css__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_common_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__common_common_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_zoom_zoom__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__config__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__apis__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__base_config__ = __webpack_require__(33);\n/**\r\n * @Author:      孙雨珩\r\n * @DateTime:    2017-07-18 09:11:51\r\n * @Description: 初始化应用\r\n * @Last Modified By:   孙雨珩\r\n * @Last Modified Time:    2017-07-20 10:56:29\r\n */\n\n// 样式重置\n\n// 加载公用的css\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  /**\r\n   *  执行初始化操作，然后执行app的初始化逻辑\r\n   *  @param    {Object}  app 页面实例\r\n   */\n  load: function load(app) {\n    var me = this;\n\n    // 将全局配置合并到全局api\n    __WEBPACK_IMPORTED_MODULE_3__config__[\"a\" /* default */].merge(__WEBPACK_IMPORTED_MODULE_5__base_config__[\"a\" /* default */]);\n    // 将应用配置合并到全局api\n    __WEBPACK_IMPORTED_MODULE_3__config__[\"a\" /* default */].merge(app.config);\n\n    // 将应用的接口配置合并到全局api\n    __WEBPACK_IMPORTED_MODULE_4__apis__[\"a\" /* default */].merge(app.apis);\n\n    me.initZoom();\n\n    // 初始化app\n    app.init();\n  },\n\n  /**\r\n   *  根据config，判断是否需要执行zoom逻辑\r\n   */\n  initZoom: function initZoom() {\n    if (__WEBPACK_IMPORTED_MODULE_3__config__[\"a\" /* default */].get('zoom')) {\n      // 为true，启用自动缩放\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util_zoom_zoom__[\"a\" /* adaptZoom */])();\n      window.addEventListener('resize', __WEBPACK_IMPORTED_MODULE_2__util_zoom_zoom__[\"b\" /* default */]);\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util_zoom_zoom__[\"b\" /* default */])();\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 279:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__login__ = __webpack_require__(329);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  fetchLogin: __WEBPACK_IMPORTED_MODULE_0__login__[\"a\" /* default */]\n});\n\n/***/ }),\n\n/***/ 280:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_jquery__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_jquery__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_request__ = __webpack_require__(13);\n\n\n/**\r\n * @Author:      zhanghq\r\n * @DateTime:    2018-01-02 10:53:17\r\n * @Description: 登录\r\n * @Last Modified By:   zhanghq\r\n * @Last Modified Time:    2018-01-02 10:53:17\r\n */\n\n\n\nvar Login = function () {\n  function Login() {\n    __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default()(this, Login);\n  }\n\n  __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default()(Login, [{\n    key: 'init',\n    value: function init() {\n      this.bindEvent();\n    }\n\n    /**\r\n     *  事件绑定\r\n     *  @return   {void}   \r\n     */\n\n  }, {\n    key: 'bindEvent',\n    value: function bindEvent() {\n      __WEBPACK_IMPORTED_MODULE_2_jquery___default()('.login-btn').on('click', function () {\n        window.location.href = '/index.html';\n        // fetch('fetchLogin', data => {\n        //   let userId = data.login.userId\n        //   console.log(userId)\n        // })\n      });\n    }\n  }]);\n\n  return Login;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Login);\n\n/***/ }),\n\n/***/ 292:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 328:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index_css__ = __webpack_require__(292);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__index_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__loader_loader__ = __webpack_require__(26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mock__ = __webpack_require__(279);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__scripts_login_js__ = __webpack_require__(280);\n\n\n\n\n\nvar login = new __WEBPACK_IMPORTED_MODULE_3__scripts_login_js__[\"a\" /* default */]();\n\n__WEBPACK_IMPORTED_MODULE_1__loader_loader__[\"a\" /* default */].load({\n  apis: __WEBPACK_IMPORTED_MODULE_2__mock__[\"a\" /* default */],\n  init: function init() {\n    login.init();\n  }\n});\n\n/***/ }),\n\n/***/ 329:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * @Author:      zhanghq\r\n * @DateTime:    2018-01-02 10:56:17\r\n * @Description: 登录\r\n * @Last Modified By:   zhanghq\r\n * @Last Modified Time:    2018-01-02 10:56:17\r\n */\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  'url': '/tianyan/login',\n  'mock': {\n    'code': 1,\n    'msg': 'success',\n    'result': {\n      'login': {\n        'userId|1-10000': 1\n      }\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 33:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/**\r\n * @Author:      孙雨珩\r\n * @DateTime:    2017-07-24 13:51:21\r\n * @Description: 全局配置\r\n * @Last Modified By:   孙雨珩\r\n * @Last Modified Time:    2017-08-09 10:13:43\r\n */\n\nvar search = global.location.search;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  // 是否使用mock模式，在mock模式下向服务器的请求使用mockjs模拟\n  mock: search.indexOf('mock') !== 1,\n  // 模拟websocket时，消息的推送间隔(毫秒)\n  mockInterval: 3500,\n  // 轮询请求时的时间间隔(毫秒)\n  fetchInterval: 3000,\n  // 是否使用proxy模式，在proxy模式下会使用proxy的url来替换原来的url\n  proxy: search.indexOf('proxy') !== -1,\n  // 线上服务器域名，当proxy为false时，所有ajax请求都会发送到这个域名\n  host: '/api/',\n  // websocket线上服务器域名，当proxy为false时，所有websocket都会连接到这个域名\n  websocketHost: 'ws://online.com',\n  // 代理服务器域名，当proxy为true时，所有ajax请求都会发送到这个域名,主要用于前后台联调\n  proxyHost: 'http://192.168.1.199:3000/api',\n  // websocket代理服务器域名，当proxy为true时，所有websocket都会连接到这个域名,主要用于前后台联调\n  websocketProxyHost: 'ws://offline.com',\n  // 是否使用zoom模式，在zoom模式下页面会根据窗口的宽高使用transform调整\n  zoom: true,\n  // 固定的页面宽\n  pageWidth: 1920,\n  // 固定的页面高\n  pageHeight: 1080\n});\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(27)))\n\n/***/ }),\n\n/***/ 34:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return errorTooltip; });\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = delay;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);\n/**\r\n * @Author:      baizn\r\n * @DateTime:    2017-01-17 09:24:27\r\n * @Description: 通用工具方法\r\n * @Last Modified By:   baizn\r\n * @Last Modified Time:    2017-01-17 09:24:27\r\n */\n\n\n\n/**\r\n * @describe [错误提示]\r\n * @param    {[type]}   data [提示内容]\r\n * @return {boolean} false\r\n */\nvar errorTooltip = function errorTooltip(data) {\n  var errorTpl = __webpack_require__(40);\n  var html = errorTpl({\n    data: data\n  });\n  __WEBPACK_IMPORTED_MODULE_0_jquery___default()('.error-dialog').html(html);\n  __WEBPACK_IMPORTED_MODULE_0_jquery___default()('#errorDialog').fadeIn(50);\n  // 关闭错误提示\n  __WEBPACK_IMPORTED_MODULE_0_jquery___default()('#errorDialog').on('click', '.close-model', function (evt) {\n    evt.stopPropagation();\n    evt.preventDefault();\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()('#errorDialog').fadeOut(50);\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()('.error-dialog').empty();\n  });\n  return false;\n};\n\n/**\r\n *  生成一个延迟函数\r\n *  @param    {Function}  func        需要延迟执行的函数\r\n *  @param    {number}  delayMillis 延迟执行的毫秒数\r\n *  @return   {Function}  延迟函数\r\n */\nfunction delay(func, delayMillis) {\n  /**\r\n   * 延迟函数\r\n   * @param    {boolean=}  immediate 是否立即执行（可选，默认为false）\r\n   * @return {function} 延时函数\r\n   */\n  return function delayFunc(immediate) {\n    if (immediate === true) {\n      func();\n    } else {\n      setTimeout(func, delayMillis);\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 35:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = zoom;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = adaptZoom;\n/* unused harmony export originToDeformation */\n/* unused harmony export deformationToOrigin */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__zoom_css__ = __webpack_require__(39);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__zoom_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__zoom_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__config__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_jquery__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_jquery__);\n/**\r\n * @Author:      孙雨珩\r\n * @DateTime:    2017-07-18 09:20:07\r\n * @Description: 对document.body进行缩放，使得body尺寸始终保持config中声明的尺寸\r\n * @Last Modified By:   孙雨珩\r\n * @Last Modified Time:    2017-08-08 13:25:11\r\n */\n\n\n\n\nvar body = __WEBPACK_IMPORTED_MODULE_2_jquery___default()('body');\n\nvar lastScale = [1, 1];\n\n/**\r\n *  根据当前窗口大小缩放页面\r\n */\nfunction zoom() {\n  var x = window.innerWidth / __WEBPACK_IMPORTED_MODULE_1__config__[\"a\" /* default */].get('pageWidth');\n  var y = window.innerHeight / __WEBPACK_IMPORTED_MODULE_1__config__[\"a\" /* default */].get('pageHeight');\n  lastScale = [x, y];\n  body.css('transform', 'scale(' + x + ', ' + y + ')');\n}\n\n/**\r\n *  开启zoom\r\n */\nfunction adaptZoom() {\n  body.addClass('zoomify').css('width', __WEBPACK_IMPORTED_MODULE_1__config__[\"a\" /* default */].get('pageWidth')).css('height', __WEBPACK_IMPORTED_MODULE_1__config__[\"a\" /* default */].get('pageHeight'));\n}\n\n/**\r\n *  将原始位置转换为zoom后的位置\r\n *  @param    {Array.number}  origin 原始位置\r\n *  @return   {Array.number}  zoom后的位置\r\n */\nfunction originToDeformation(origin) {\n  return [origin[0] * lastScale[0], origin[1] * lastScale[1]];\n}\n\n/**\r\n *  将zoom后的位置转换为原始位置\r\n *  @param    {Array.number}  deformation zoom后的位置\r\n *  @return   {Array.number}  原始位置\r\n */\nfunction deformationToOrigin(deformation) {\n  return [deformation[0] / lastScale[0], deformation[1] / lastScale[1]];\n}\n\n/***/ }),\n\n/***/ 38:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 39:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 40:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Handlebars = __webpack_require__(11);\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[7,\">= 4.0.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<div class=\\\"model-bg\\\" id=\\\"errorDialog\\\">\\r\\n  <div class=\\\"model-container\\\">\\r\\n    <div class=\\\"model-body\\\">\"\n    + container.escapeExpression(((helper = (helper = helpers.data || (depth0 != null ? depth0.data : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"data\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</div>\\r\\n        \\r\\n    <div class=\\\"close-model\\\"></div>\\r\\n  </div>\\r\\n</div>\";\n},\"useData\":true});\n\n/***/ }),\n\n/***/ 7:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__);\n\n/**\r\n * @Author:      孙雨珩\r\n * @DateTime:    2017-07-17 15:29:37\r\n * @Description: 全局配置\r\n * @Last Modified By:   孙雨珩\r\n * @Last Modified Time:    2017-07-20 11:09:36\r\n */\nvar config = {};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  /**\r\n   *  将源配置覆盖到全局配置\r\n   *  @param    {Object}  srcConfig 源配置，将会覆盖到全局配置\r\n   */\n  merge: function merge(srcConfig) {\n    config = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, config, srcConfig);\n  },\n\n  /**\r\n   *  获取某个配置项的值\r\n   *  @param    {string}  key 配置项的key\r\n   *  @return   {*}  配置项的值\r\n   */\n  get: function get(key) {\n    return config[key];\n  }\n});\n\n/***/ })\n\n},[328]);\n\n\n// WEBPACK FOOTER //\n// static/js/login.5c402db71aa2302f8f47.js","/**\r\n * @Author:      baizn\r\n * @DateTime:    2017-03-20 13:36:18\r\n * @Description: Description\r\n * @Last Modified By:   孙雨珩\r\n * @Last Modified Time:    2017-09-26 10:49:47\r\n */\r\n\r\nimport $ from 'jquery'\r\nimport { errorTooltip, delay } from './util'\r\nimport { isFunction, isNumber, isArray } from './typeCheck'\r\nimport apis from '@/apis'\r\nimport config from '@/config'\r\nimport ReconnectingWebSocket from 'reconnecting-websocket'\r\n\r\n/**\r\n * 普通AJAX请求\r\n *  如果向后端传递的数据需要是json，那么接口.config.contentType应为'application/json; charset=UTF-8'\r\n *  如果向后端传递的数据需要传递文件，那么接口.config.contentType应为'multipart/form-data; charset=UTF-8'\r\n * \r\n * @export 对外暴露方法\r\n * @param {string} apiName 接口名称\r\n * @param {object} [data={}] 接口参数 可选\r\n * @param {function} callback 回调函数\r\n * @returns {Boolean} false\r\n */\r\nexport function fetch(apiName, data = {}, callback) {\r\n  if(arguments.length === 2 && isFunction(data)) {\r\n    // 只传了apiName和callback\r\n    callback = data\r\n    data = {}\r\n  }\r\n  const ajaxConfig = apis.config(apiName)\r\n  const extraAjaxConfig = {}\r\n  let ajaxData = apis.filterData(apiName, data)\r\n  if (ajaxConfig.contentType) {\r\n    const contentType = ajaxConfig.contentType\r\n    if (contentType.indexOf('application/json') != -1) {\r\n      // application/json的要自己将传递的数据转换成字符串\r\n      ajaxData = JSON.stringify(ajaxData)\r\n    } else if (contentType.indexOf('multipart/form-data') != -1) {\r\n      // 有文件要上传，使用formData\r\n      // 把contentType置为false，由xhr自己生成，避免使用者忘记设置boundary\r\n      extraAjaxConfig.contentType = false\r\n      // xhr可直接发送formData，不用jquery重复处理数据\r\n      extraAjaxConfig.processData = false\r\n      const formData = new FormData()\r\n      Object.keys(ajaxData)\r\n        .forEach(key => {\r\n          const val = ajaxData[key]\r\n          if (isArray(val)) {\r\n            val.forEach(val => {\r\n              formData.append(key, val)\r\n            })\r\n          } else {\r\n            formData.append(key, val)\r\n          }\r\n        })\r\n      extraAjaxConfig.data = formData\r\n    }\r\n  }\r\n  return $.ajax({\r\n    url: apis.url(apiName, data),\r\n    dataType: 'json',\r\n    data: ajaxData,\r\n    ...ajaxConfig,\r\n    ...extraAjaxConfig\r\n  }).done((response) => {\r\n    if(!response.code){\r\n      return errorTooltip( `调后台接口失败:${ response.msg }` )\r\n    }\r\n    callback && callback(response.result)\r\n  }).fail(() => {\r\n    return errorTooltip( '请求失败: 系统错误' )\r\n  })\r\n}\r\n\r\n/**\r\n *  向指定api循环发送发送请求\r\n *  @param    {string}   apiName api名称\r\n *  @param    {object=}   data    请求参数（可选）\r\n *  @param    {Function}    cb    处理响应数据的回调\r\n *  @param    {number=}    interval    轮询间隔（毫秒）（可选，默认为配置值）\r\n *  @return   {Object}   用于对轮询状态进行操作的实例\r\n */\r\nexport function fetchInterval(apiName, data, cb, interval) {\r\n  const argumentsLength = arguments.length\r\n  const defaultInterval = config.get('fetchInterval')\r\n  if (argumentsLength === 2) {\r\n    // 只传了2个参数\r\n    // 没传data，没传interval\r\n    cb = data\r\n    data = null\r\n    interval = null\r\n  } else if (argumentsLength === 3) {\r\n    // 只传了3个参数\r\n    if (isFunction(cb)) {\r\n      // 没有传interval\r\n      interval = null\r\n    } else if (isNumber(cb)) {\r\n      // 没有传data\r\n      interval = cb\r\n      cb = data\r\n      data = null\r\n    }\r\n  }\r\n\r\n  data = data || {}\r\n  interval = interval || defaultInterval\r\n\r\n  let hasClosed = false\r\n  const delayFetchInterval = delay(\r\n    function() {\r\n      if (hasClosed) {\r\n        return\r\n      }\r\n      fetch(apiName, data, cb)\r\n        .always(delayFetchInterval)\r\n    },\r\n    interval\r\n  )\r\n  delayFetchInterval(true)\r\n  return {\r\n    // 停止轮询\r\n    close() {\r\n      hasClosed = true\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n *  建立websocket链接\r\n *  @param    {string}   apiName api名称\r\n *  @param    {Object=}   data    请求参数（可选）\r\n *  @param    {Function} cb      处理推送数据的回调\r\n *  @return   {Websocket}   websocket实例\r\n */\r\nexport function fetchSocket(apiName, data, cb) {\r\n  if (arguments.length === 2 && isFunction(data)) {\r\n    // 只传了2个参数，并且第2个参数是函数，说明第二个参数是cb\r\n    cb = data\r\n    data = {}\r\n  }\r\n  if (config.get('mock')) {\r\n    // 需要mock，那么使用fetchInterval模拟\r\n    const fakeWs = fetchInterval(apiName, data, cb)\r\n    return fakeWs\r\n  }\r\n  // 不需要mock，创建真实的websocket\r\n  const ws = new ReconnectingWebSocket(\r\n    apis.url(apiName, data), []\r\n  )\r\n  ws.onmessage = cb\r\n  ws.onclose = function () {\r\n    this.close()\r\n  }\r\n  // 当页面被卸载时，需要断开websocket\r\n  window.addEventListener(\r\n    'unload',\r\n    function close() {\r\n      window.removeEventListener('unload', close)\r\n      ws.close()\r\n    }\r\n  )\r\n  return ws\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/request.js","/**\r\n * @Author:      孙雨珩\r\n * @DateTime:    2017-07-18 09:26:24\r\n * @Description: 全局接口配置\r\n * @Last Modified By:   孙雨珩\r\n * @Last Modified Time:    2017-09-26 10:49:26\r\n */\r\nimport Mock from 'mockjs'\r\nimport config from './config'\r\nimport { isObject } from './util/typeCheck'\r\n\r\nconst apiMap = {}\r\n\r\n/**\r\n *  当host没有域名时，根据页面的域名补充host\r\n *  @param    {string}  host        地址\r\n *  @param    {Boolean=} isWebsocket 是否是websocket（可选）\r\n *  @return   {string}  补充后的host\r\n */\r\nfunction normalizeHost(host, isWebsocket) {\r\n  let hosts = host\r\n  if (hosts && hosts.indexOf('//') !== -1) {\r\n    // 有协议，那么就认为有域名，不进行处理\r\n    return hosts\r\n  }\r\n  if (hosts === null) {\r\n    hosts = ''\r\n  }\r\n  hosts = location.host + hosts\r\n  const normalProtocol = location.protocol\r\n  if (isWebsocket) {\r\n    // 是websocket，根据页面协议猜测对应的ws协议\r\n    let protocol = 'ws://'\r\n    if (normalProtocol === 'https:') {\r\n      // https协议对应wss协议\r\n      protocol = 'wss://'\r\n    }\r\n    hosts = protocol + hosts\r\n  } else {\r\n    hosts = normalProtocol + '//' + hosts\r\n  }\r\n  return hosts\r\n}\r\n\r\n// 第一个字符不能是数字从而防止匹配到port\r\nconst paramReg = /:([^/\\d][^/]+)/g\r\n\r\nexport default {\r\n  /**\r\n   *  加载接口配置\r\n   *  @param    {Object}  apiConfigMap 接口配置\r\n   */\r\n  merge(apiConfigMap) {\r\n    const me = this\r\n    let host\r\n    let websocketHost\r\n    const mock = config.get('mock')\r\n    if(config.get('proxy')) {\r\n      // 为true，启用代理\r\n      host = config.get('proxyHost')\r\n      websocketHost = config.get('websocketProxyHost')\r\n    } else {\r\n      // 为false，不用代理\r\n      host = normalizeHost(config.get('host'))\r\n      websocketHost = normalizeHost(config.get('websocketHost'), true)\r\n    }\r\n    for(const key in apiConfigMap) {\r\n      if(!Object.prototype.hasOwnProperty.call(apiConfigMap, key)\r\n        || !{}.hasOwnProperty.call(apiConfigMap, key)) {\r\n        continue\r\n      }\r\n      // 默认不是websocket接口\r\n      let isWebsocket = false\r\n      const apiConfig = apiConfigMap[key]\r\n      const ajaxConfig = apiConfig.config || {}\r\n      const url = apiConfig.url\r\n      if(apiConfig.isWebsocket === true) {\r\n        // 接口声明是websocket接口\r\n        isWebsocket = true\r\n      }\r\n      if (!ajaxConfig.type) {\r\n        // 默认method为get\r\n        ajaxConfig.type = 'get'\r\n      }\r\n      ajaxConfig.type = ajaxConfig.type.toLowerCase()\r\n      apiMap[key] = {\r\n        // 如果是websocket接口，则需要用websocketHost\r\n        // 否则用host\r\n        url: (isWebsocket ? websocketHost : host) + url,\r\n        config: ajaxConfig\r\n      }\r\n      if(mock && apiConfig.mock) {\r\n        // 需要mock，并且api存在mock配置\r\n        Mock.mock(\r\n          me.reg(key),\r\n          ajaxConfig.type,\r\n          apiConfig.mock\r\n        )\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   *  根据接口的名称，获取未绑定数据的url\r\n   *  @param    {string}  key 接口的名称\r\n   *  @return   {string}  接口的url\r\n   */\r\n  rawUrl(key) {\r\n    return apiMap[key].url\r\n  },\r\n  /**\r\n   *  根据接口的名称，获取绑定数据后的url\r\n   *  @param    {string}  key 接口的名称\r\n   *  @param    {Object=}  data 如果接口url上定义的变量名存在于data中，就会进行转换（可选）\r\n   *  @return   {string}  接口转换后的url\r\n   */\r\n  url(key, data = {}) {\r\n    const me = this\r\n    const url = me.rawUrl(key)\r\n\r\n    return url.replace(\r\n      paramReg,\r\n      (str, paramName) => {\r\n        let val = data[paramName]\r\n        if(val === undefined) {\r\n          val = 'null'\r\n        }\r\n        return global.encodeURIComponent(val)\r\n      }\r\n    )\r\n  },\r\n  /**\r\n   *  根据接口的名称，获取用来描述接口的url的正则表达式\r\n   *  @param    {string}  key 接口的名称\r\n   *  @return   {RegExp}  描述url的正则表达式\r\n   */\r\n  reg(key) {\r\n    const me = this\r\n    const rawUrl = me.rawUrl(key)\r\n    let regStr = rawUrl\r\n      .replace(/\\./g, '\\\\.')\r\n      .replace(paramReg, '[^/]+')\r\n    return new RegExp(`^${regStr}(\\\\?.*)?$`)\r\n  },\r\n  /**\r\n   *  根据接口的名称，获取接口的ajax配置\r\n   *  @param    {string}  key 接口名称\r\n   *  @return   {Object}  ajax配置\r\n   */\r\n  config(key) {\r\n    return apiMap[key] && apiMap[key].config\r\n  },\r\n  /**\r\n   *  根据接口的名称，过滤数据中能绑定到url的数据\r\n   *  @param    {string}  key  接口的名称\r\n   *  @param    {Object}  data 数据\r\n   *  @return   {Object}  无法绑定到url的剩余数据\r\n   */\r\n  filterData(key, data) {\r\n    const me = this\r\n    if (!isObject(data)) {\r\n      return data\r\n    }\r\n    const resData = {...data}\r\n    const rawUrl = me.rawUrl(key)\r\n    let execRes\r\n    while(execRes = paramReg.exec(rawUrl)) {\r\n      const paramName = execRes[1]\r\n      delete resData[paramName]\r\n    }\r\n    return resData\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/apis.js","/**\r\n * @Author:      孙雨珩\r\n * @DateTime:    2017-07-31 16:09:06\r\n * @Description: 类型检查\r\n * @Last Modified By:   孙雨珩\r\n * @Last Modified Time:    2017-09-26 10:33:15\r\n */\r\n\r\n/**\r\n *  检查值是否和要求的类型匹配\r\n *  @param    {*}  val        等待检查的值\r\n *  @param    {string}  expectType 期望类型\r\n *  @return   {boolean} 为true说明类型检查通过，为false说明类型检查不通过\r\n */\r\nexport function is(val, expectType) {\r\n  return Object.prototype.toString.call(val) === `[object ${expectType}]`\r\n}\r\n\r\n/**\r\n *  检查是否是Object类型\r\n *  @param    {*}  val 等待检查的类型\r\n *  @return   {boolean} 为true说明值是Object类型，为false说明值不是Object类型\r\n */\r\nexport function isObject(val) {\r\n  return is(val, 'Object')\r\n}\r\n\r\n/**\r\n *  检查是否是String类型\r\n *  @param    {*}  val 等待检查的类型\r\n *  @return   {boolean} 为true说明值是String类型，为false说明值不是String类型\r\n */\r\nexport function isString(val) {\r\n  return is(val, 'String')\r\n}\r\n\r\n/**\r\n *  检查是否是Function类型\r\n *  @param    {*}  val 等待检查的类型\r\n *  @return   {boolean} 为true说明值是Function类型，为false说明值不是Function类型\r\n */\r\nexport function isFunction(val) {\r\n  return is(val, 'Function')\r\n}\r\n\r\n/**\r\n *  检查是否是Number类型\r\n *  @param    {*}  val 等待检查的类型\r\n *  @return   {boolean} 为true说明值是Number类型，为false说明值不是Number类型\r\n */\r\nexport function isNumber(val) {\r\n  return is(val, 'Number')\r\n}\r\n\r\n/**\r\n *  检查是否是Boolean类型\r\n *  @param    {*}  val 等待检查的类型\r\n *  @return   {boolean} 为true说明值是Boolean类型，为false说明值不是Boolean类型\r\n */\r\nexport function isBoolean(val) {\r\n  return is(val, 'Boolean')\r\n}\r\n\r\n/**\r\n *  检查是否是Array类型\r\n *  @param    {*}  val 等待检查的类型\r\n *  @return   {boolean} 为true说明值是Array类型，为false说明值不是Array类型\r\n */\r\nexport function isArray(val) {\r\n  return is(val, 'Array')\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/util/typeCheck.js","/**\r\n * @Author:      孙雨珩\r\n * @DateTime:    2017-07-18 09:11:51\r\n * @Description: 初始化应用\r\n * @Last Modified By:   孙雨珩\r\n * @Last Modified Time:    2017-07-20 10:56:29\r\n */\r\n\r\n// 样式重置\r\nimport 'reset-css'\r\n// 加载公用的css\r\nimport './common/common.css'\r\n\r\nimport { adaptZoom, default as zoom } from '@/util/zoom/zoom'\r\n\r\nimport config from '@/config'\r\nimport apis from '@/apis'\r\n\r\nimport globalConfig from './base.config'\r\n\r\nexport default {\r\n  /**\r\n   *  执行初始化操作，然后执行app的初始化逻辑\r\n   *  @param    {Object}  app 页面实例\r\n   */\r\n  load(app) {\r\n    const me = this\r\n\r\n    // 将全局配置合并到全局api\r\n    config.merge(globalConfig)\r\n    // 将应用配置合并到全局api\r\n    config.merge(app.config)\r\n\r\n    // 将应用的接口配置合并到全局api\r\n    apis.merge(app.apis)\r\n\r\n    me.initZoom()\r\n\r\n    // 初始化app\r\n    app.init()\r\n  },\r\n  /**\r\n   *  根据config，判断是否需要执行zoom逻辑\r\n   */\r\n  initZoom() {\r\n    if(config.get('zoom')) {\r\n      // 为true，启用自动缩放\r\n      adaptZoom()\r\n      window.addEventListener('resize', zoom)\r\n      zoom()\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/loader/loader.js","\r\nimport fetchLogin from './login'\r\n \r\nexport default {\r\n  fetchLogin \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/apps/login/mock/index.js","/**\r\n * @Author:      zhanghq\r\n * @DateTime:    2018-01-02 10:53:17\r\n * @Description: 登录\r\n * @Last Modified By:   zhanghq\r\n * @Last Modified Time:    2018-01-02 10:53:17\r\n */\r\nimport $ from 'jquery'\r\nimport { fetch } from '@/util/request'\r\n\r\nexport default class Login {\r\n  init() {\r\n    this.bindEvent()\r\n  }\r\n\r\n  /**\r\n   *  事件绑定\r\n   *  @return   {void}   \r\n   */\r\n  bindEvent() {\r\n    $('.login-btn').on('click', () => {\r\n      window.location.href = '/index.html' \r\n      // fetch('fetchLogin', data => {\r\n      //   let userId = data.login.userId\r\n      //   console.log(userId)\r\n      // })\r\n    })\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/apps/login/scripts/login.js","\r\nimport './index.css'\r\nimport loader from '@/loader/loader'\r\nimport apis from './mock'\r\nimport Login from './scripts/login.js'\r\nconst login = new Login() \r\n\r\nloader.load({\r\n  apis: apis,\r\n  init() {\r\n    login.init()\r\n  }\r\n})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/apps/login/index.js","/**\r\n * @Author:      zhanghq\r\n * @DateTime:    2018-01-02 10:56:17\r\n * @Description: 登录\r\n * @Last Modified By:   zhanghq\r\n * @Last Modified Time:    2018-01-02 10:56:17\r\n */\r\n\r\nexport default {\r\n  'url': '/tianyan/login',\r\n  'mock': {\r\n    'code': 1,\r\n    'msg': 'success',\r\n    'result': {\r\n      'login': {\r\n        'userId|1-10000': 1\r\n      }\r\n    } \r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/apps/login/mock/login.js","/**\r\n * @Author:      孙雨珩\r\n * @DateTime:    2017-07-24 13:51:21\r\n * @Description: 全局配置\r\n * @Last Modified By:   孙雨珩\r\n * @Last Modified Time:    2017-08-09 10:13:43\r\n */\r\n\r\nconst search = global.location.search\r\n\r\nexport default {\r\n  // 是否使用mock模式，在mock模式下向服务器的请求使用mockjs模拟\r\n  mock: search.indexOf('mock') !== 1,\r\n  // 模拟websocket时，消息的推送间隔(毫秒)\r\n  mockInterval: 3500,\r\n  // 轮询请求时的时间间隔(毫秒)\r\n  fetchInterval: 3000,\r\n  // 是否使用proxy模式，在proxy模式下会使用proxy的url来替换原来的url\r\n  proxy: search.indexOf('proxy') !== -1,\r\n  // 线上服务器域名，当proxy为false时，所有ajax请求都会发送到这个域名\r\n  host: '/api/',\r\n  // websocket线上服务器域名，当proxy为false时，所有websocket都会连接到这个域名\r\n  websocketHost: 'ws://online.com',\r\n  // 代理服务器域名，当proxy为true时，所有ajax请求都会发送到这个域名,主要用于前后台联调\r\n  proxyHost: 'http://192.168.1.199:3000/api',\r\n  // websocket代理服务器域名，当proxy为true时，所有websocket都会连接到这个域名,主要用于前后台联调\r\n  websocketProxyHost: 'ws://offline.com',\r\n  // 是否使用zoom模式，在zoom模式下页面会根据窗口的宽高使用transform调整\r\n  zoom: true,\r\n  // 固定的页面宽\r\n  pageWidth: 1920,\r\n  // 固定的页面高\r\n  pageHeight: 1080\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/loader/base.config.js","/**\r\n * @Author:      baizn\r\n * @DateTime:    2017-01-17 09:24:27\r\n * @Description: 通用工具方法\r\n * @Last Modified By:   baizn\r\n * @Last Modified Time:    2017-01-17 09:24:27\r\n */\r\n\r\nimport $ from 'jquery'\r\n\r\n/**\r\n * @describe [错误提示]\r\n * @param    {[type]}   data [提示内容]\r\n * @return {boolean} false\r\n */\r\nexport const errorTooltip = (data) => {\r\n  let errorTpl = require('./errorTips/errorDialog.hbs')\r\n  let html = errorTpl({\r\n    data\r\n  }) \r\n  $('.error-dialog').html(html)\r\n  $('#errorDialog').fadeIn(50)\r\n  // 关闭错误提示\r\n  $('#errorDialog').on('click', '.close-model', function(evt){\r\n    evt.stopPropagation()\r\n    evt.preventDefault()\r\n    $('#errorDialog').fadeOut(50)\r\n    $('.error-dialog').empty()\r\n  })\r\n  return false\r\n}\r\n\r\n/**\r\n *  生成一个延迟函数\r\n *  @param    {Function}  func        需要延迟执行的函数\r\n *  @param    {number}  delayMillis 延迟执行的毫秒数\r\n *  @return   {Function}  延迟函数\r\n */\r\nexport function delay(func, delayMillis) {\r\n  /**\r\n   * 延迟函数\r\n   * @param    {boolean=}  immediate 是否立即执行（可选，默认为false）\r\n   * @return {function} 延时函数\r\n   */\r\n  return function delayFunc(immediate) {\r\n    if(immediate === true) {\r\n      func()\r\n    } else {\r\n      setTimeout(func, delayMillis)\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/util.js","/**\r\n * @Author:      孙雨珩\r\n * @DateTime:    2017-07-18 09:20:07\r\n * @Description: 对document.body进行缩放，使得body尺寸始终保持config中声明的尺寸\r\n * @Last Modified By:   孙雨珩\r\n * @Last Modified Time:    2017-08-08 13:25:11\r\n */\r\nimport './zoom.css'\r\nimport config from '@/config'\r\nimport $ from 'jquery'\r\n\r\nconst body = $('body')\r\n\r\nlet lastScale = [1, 1]\r\n\r\n/**\r\n *  根据当前窗口大小缩放页面\r\n */\r\nexport default function zoom() {\r\n  const x = window.innerWidth / config.get('pageWidth')\r\n  const y = window.innerHeight / config.get('pageHeight')\r\n  lastScale = [x, y]\r\n  body\r\n    .css('transform',`scale(${x}, ${y})`)\r\n}\r\n\r\n/**\r\n *  开启zoom\r\n */\r\nexport function adaptZoom() {\r\n  body\r\n     .addClass('zoomify')\r\n    .css('width', config.get('pageWidth'))\r\n    .css('height', config.get('pageHeight'))\r\n}\r\n\r\n/**\r\n *  将原始位置转换为zoom后的位置\r\n *  @param    {Array.number}  origin 原始位置\r\n *  @return   {Array.number}  zoom后的位置\r\n */\r\nexport function originToDeformation(origin) {\r\n  return [origin[0] * lastScale[0], origin[1] * lastScale[1]]\r\n}\r\n\r\n/**\r\n *  将zoom后的位置转换为原始位置\r\n *  @param    {Array.number}  deformation zoom后的位置\r\n *  @return   {Array.number}  原始位置\r\n */\r\nexport function deformationToOrigin(deformation) {\r\n  return [deformation[0] / lastScale[0], deformation[1] / lastScale[1]]\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/util/zoom/zoom.js","var Handlebars = require(\"E:\\\\JOB\\\\tianyan\\\\node_modules\\\\handlebars\\\\runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[7,\">= 4.0.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<div class=\\\"model-bg\\\" id=\\\"errorDialog\\\">\\r\\n  <div class=\\\"model-container\\\">\\r\\n    <div class=\\\"model-body\\\">\"\n    + container.escapeExpression(((helper = (helper = helpers.data || (depth0 != null ? depth0.data : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"data\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</div>\\r\\n        \\r\\n    <div class=\\\"close-model\\\"></div>\\r\\n  </div>\\r\\n</div>\";\n},\"useData\":true});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util/errorTips/errorDialog.hbs\n// module id = 40\n// module chunks = 1 2 3 4 5 6","/**\r\n * @Author:      孙雨珩\r\n * @DateTime:    2017-07-17 15:29:37\r\n * @Description: 全局配置\r\n * @Last Modified By:   孙雨珩\r\n * @Last Modified Time:    2017-07-20 11:09:36\r\n */\r\nlet config = {}\r\n\r\nexport default {\r\n  /**\r\n   *  将源配置覆盖到全局配置\r\n   *  @param    {Object}  srcConfig 源配置，将会覆盖到全局配置\r\n   */\r\n  merge(srcConfig) {\r\n    config = {\r\n      ...config,\r\n      ...srcConfig\r\n    }\r\n  },\r\n  /**\r\n   *  获取某个配置项的值\r\n   *  @param    {string}  key 配置项的key\r\n   *  @return   {*}  配置项的值\r\n   */\r\n  get(key) {\r\n    return config[key]\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/config.js"],"sourceRoot":""}